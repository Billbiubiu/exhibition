{"version":3,"sources":["utils/index.js","pages/exhibition/index.jsx","index.js"],"names":["makeRadian","radian","makedRadian","Math","PI","getRotation","source","target","makedSource","diff","HALF_PI","DOUBLE_PI","IS_MOBILE","window","navigator","userAgent","toLowerCase","indexOf","keySet","Set","addControls","boundariesRef","camera","domElement","renderer","moveCamera","dx","dy","callback","x","position","y","point","boundaries","current","length","find","boundary","turf","isPointInBoundaries","requestAnimationFrame","addEventListener","startEvent","startTouches","touches","offsetWidth","offsetHeight","rotation","startX","clientX","startY","clientY","onTouchMove","moveEvent","moveTouches","moveX","moveY","rotationX","rotationY","onTouchEnd","removeEventListener","startDistance","sqrt","pow","ratio","sin","cos","downEvent","downX","offsetX","downY","offsetY","onPointerMove","onPointerUp","e","deltaY","keyMap","onArrowUp","has","onArrowRight","onArrowDown","onArrowLeft","document","key","add","delete","addKeyboardControls","floorMap","1","scene","setLoading","setCurrentExhibit","drawExhibit","url","Promise","resolve","reject","image","Image","src","onload","width","height","ratioX","ratioY","max","w","h","texture","three","load","geometry","material","color","map","exhibit","onClick","intersect","box","setFromObject","object","min","center","rotationZ","z","newRotation","abs","newPosition","duration","TWEEN","Tween","to","interpolation","Interpolation","Bezier","easing","Easing","Linear","None","start","frame","size","shape","border","moveTo","lineTo","path","holes","push","extrude","depth","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","drawFrame","group","onerror","drawWall","exhibits","wall","footer","Object","assign","spacing","all","index","then","res","set","finally","lights","drawLights","floor","drawFloor","ceiling","drawCeiling","walls","geometries","2","Exhibition","containerRef","useRef","useState","inited","setInited","useReducer","state","newState","setInstances","loading","currentFloor","setCurrentFloor","currentExhibit","useEffect","instances","container","antialias","setSize","setClearColor","appendChild","init","ambientLight","addLights","startTime","Date","now","upEvent","upX","upY","endTime","raycaster","mouse","setFromCamera","intersects","intersectObjects","children","addRaycaster","onResize","aspect","updateProjectionMatrix","renderFloor","remove","interrupt","update","render","handleEscape","spinning","style","ref","touchAction","top","right","padding","Group","type","display","left","textAlign","background","userSelect","alt","maxWidth","maxHeight","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5fc674e.chunk.js","sourcesContent":["export const makeRadian = radian => {\r\n  let makedRadian = radian % (Math.PI * 2);\r\n  return makedRadian < 0 ? makedRadian + (Math.PI * 2) : makedRadian;\r\n};\r\n/**\r\n* 转动工具，总是以锐角进行转动\r\n* @param {*} source 当前角度\r\n* @param {*} target 目标角度\r\n* @returns \r\n*/\r\nexport const getRotation = (source, target) => {\r\n let makedSource = makeRadian(source);\r\n let makedTarget = makeRadian(target);\r\n const diff = makedTarget - makedSource;\r\n // 差值大于180度，需要反方向旋转\r\n if (diff > Math.PI) {\r\n   return source - (Math.PI * 2 - diff);\r\n } else if (diff < -Math.PI) {\r\n   return source + (Math.PI * 2 + diff);\r\n } else {\r\n   return source + diff;\r\n }\r\n};\r\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\nimport * as three from 'three';\nimport * as turf from '@turf/turf';\nimport TWEEN from '@tweenjs/tween.js';\nimport { makeRadian, getRotation } from '../../utils';\nimport { Spin, Button } from 'antd';\n\nconst { PI } = Math;\nconst HALF_PI = PI / 2;\nconst DOUBLE_PI = PI * 2;\n// 是否为移动端\nconst IS_MOBILE = window.navigator.userAgent.toLowerCase().indexOf('mobile') > -1;\n\n// 已按下的键\nconst keySet = new Set();\nconst init = container => {\n  const { offsetWidth, offsetHeight } = container;\n  const scene = new three.Scene();\n  const camera = new three.PerspectiveCamera(75, offsetWidth / offsetHeight, 0.1, 1000);\n  camera.position.set(0, 0, 12);\n  camera.rotation.set(HALF_PI, 0, 0);\n  const renderer = new three.WebGLRenderer({ antialias: true });\n  renderer.setSize(offsetWidth, offsetHeight);\n  renderer.setClearColor(0x222842, 1);\n  container.appendChild(renderer.domElement);\n  // 添加实例到window对象，方便调试\n  window.scene = scene;\n  window.camera = camera;\n  window.renderer = renderer;\n  return { scene, camera, renderer };\n};\n// 添加环境光\nconst addLights = ({ scene }) => {\n  const ambientLight = new three.AmbientLight(0xFFFFFF, 0.5);\n  scene.add(ambientLight);\n};\n// 添加鼠标控制、手势控制、键盘控制\nconst addControls = ({ camera, renderer }, boundariesRef) => {\n  const { domElement } = renderer;\n  // 判断移动后是否在范围内\n  const isPointInBoundaries = point => {\n    const boundaries = boundariesRef.current;\n    if (!boundaries.length) return false;\n    return !!boundaries.find(boundary => {\n      return turf.booleanPointInPolygon(turf.point(point), boundary);\n    });\n  };\n  // 移动相机\n  const moveCamera = (dx, dy, callback) => {\n    const x = camera.position.x + dx;\n    const y = camera.position.y + dy;\n    if (!isPointInBoundaries([x, y])) return;\n    camera.position.x = x;\n    camera.position.y = y;\n    callback && requestAnimationFrame(callback);\n  };\n  // 监听触摸\n  const addTouchControls = () => {\n    const onTouchStart = startEvent => {\n      const { touches: startTouches } = startEvent;\n      if (startTouches.length === 1) {\n        const { offsetWidth, offsetHeight } = domElement;\n        const { x, y } = camera.rotation;\n        const { clientX: startX, clientY: startY } = startTouches[0];\n        const onTouchMove = moveEvent => {\n          const { touches: moveTouches } = moveEvent;\n          if (moveTouches.length !== 1) return;\n          const { clientX: moveX, clientY: moveY } = moveTouches[0];\n          const dy = moveY - startY;\n          const rotationX = x + (dy / (offsetHeight / 2) * PI);\n          camera.rotation.x = rotationX;\n          camera.rotation.x = x; // 不允许沿x轴转动\n          const dx = moveX - startX;\n          const rotationY = y + (dx / (offsetWidth / 2) * (2 * PI))\n          camera.rotation.y = rotationY;\n        }\n        const onTouchEnd = () => {\n          domElement.removeEventListener('touchmove', onTouchMove);\n          domElement.removeEventListener('touchend', onTouchEnd);\n        }\n        domElement.addEventListener('touchmove', onTouchMove);\n        domElement.addEventListener('touchend', onTouchEnd);\n      } else if (startTouches.length === 2) {\n        const { x, y } = camera.position;\n        const startDistance = Math.sqrt(Math.pow((startTouches[0].clientX - startTouches[1].clientX), 2) + Math.pow((startTouches[0].clientY - startTouches[1].clientY), 2));\n        const onTouchMove = moveEvent => {\n          const { touches: moveTouches } = moveEvent;\n          if (moveTouches.length !== 2) return;\n          const moveDistance = Math.sqrt(Math.pow((moveTouches[0].clientX - moveTouches[1].clientX), 2) + Math.pow((moveTouches[0].clientY - moveTouches[1].clientY), 2));\n          const ratio = moveDistance / startDistance;\n          const { y: rotationY } = camera.rotation;\n          if (ratio < 1) {\n            const dx = Math.sin(rotationY) * 10;\n            const dy = -Math.cos(rotationY) * 10;\n            camera.position.x = x + (dx * (1 / ratio));\n            camera.position.y = y + (dy * (1 / ratio));\n          } else {\n            const dx = -Math.sin(rotationY) * 10;\n            const dy = Math.cos(rotationY) * 10;\n            camera.position.x = x + (dx * ratio);\n            camera.position.y = y + (dy * ratio);\n          }\n        };\n        const onTouchEnd = () => {\n          domElement.removeEventListener('touchmove', onTouchMove);\n          domElement.removeEventListener('touchend', onTouchEnd);\n        }\n        domElement.addEventListener('touchmove', onTouchMove);\n        domElement.addEventListener('touchend', onTouchEnd);\n      }\n    };\n    domElement.addEventListener('touchstart', onTouchStart);\n  };\n  // 监听鼠标\n  const addMouseControls = () => {\n\n    const onPointerDown = downEvent => {\n      const { offsetWidth, offsetHeight } = domElement;\n      const { x, y } = camera.rotation;\n      const { offsetX: downX, offsetY: downY } = downEvent;\n      const onPointerMove = moveEvent => {\n        const { offsetX: moveX, offsetY: moveY } = moveEvent;\n        const dy = moveY - downY;\n        const rotationX = x + (dy / (offsetHeight / 2) * PI);\n        camera.rotation.x = rotationX;\n        camera.rotation.x = x; // 不允许沿x轴转动\n        const dx = moveX - downX;\n        const rotationY = y + (dx / (offsetWidth / 2) * (2 * PI))\n        camera.rotation.y = rotationY;\n      }\n      const onPointerUp = () => {\n        domElement.removeEventListener('pointermove', onPointerMove);\n        domElement.removeEventListener('pointerup', onPointerUp);\n      }\n      domElement.addEventListener('pointermove', onPointerMove);\n      domElement.addEventListener('pointerup', onPointerUp);\n    };\n    const onWheel = e => {\n      const { deltaY } = e;\n      const { y: rotationY } = camera.rotation;\n      // deltaY > 0 缩小\n      if (deltaY > 0) {\n        const dx = Math.sin(rotationY);\n        const dy = -Math.cos(rotationY);\n        moveCamera(dx, dy);\n      } else {\n        const dx = -Math.sin(rotationY);\n        const dy = Math.cos(rotationY);\n        moveCamera(dx, dy);\n      }\n    };\n    domElement.addEventListener('pointerdown', onPointerDown);\n    domElement.addEventListener('wheel', onWheel);\n  };\n  // 监听键盘\n  const addKeyboardControls = () => {\n    // 字母键对应的方向\n    const keyMap = {\n      'w': 'ArrowUp',\n      'a': 'ArrowLeft',\n      's': 'ArrowDown',\n      'd': 'ArrowRight',\n    };\n    const onArrowUp = () => {\n      if (keySet.has('ArrowUp')) {\n        const { y: rotationY } = camera.rotation;\n        const dx = -Math.sin(rotationY);\n        const dy = Math.cos(rotationY);\n        moveCamera(dx, dy, onArrowUp);\n      }\n    };\n    const onArrowRight = () => {\n      if (keySet.has('ArrowRight')) {\n        if (keySet.has('Control')) {\n          camera.rotation.y -= (PI / 180);\n          requestAnimationFrame(onArrowRight);\n        } else {\n          const { y: rotationY } = camera.rotation;\n          const dx = Math.cos(rotationY);\n          const dy = Math.sin(rotationY);\n          moveCamera(dx, dy, onArrowRight);\n        }\n      }\n    };\n    const onArrowDown = () => {\n      if (keySet.has('ArrowDown')) {\n        const { y: rotationY } = camera.rotation;\n        const dx = Math.sin(rotationY);\n        const dy = -Math.cos(rotationY);\n        moveCamera(dx, dy, onArrowDown);\n      }\n    };\n    const onArrowLeft = () => {\n      if (keySet.has('ArrowLeft')) {\n        if (keySet.has('Control')) {\n          camera.rotation.y += (PI / 180);\n          requestAnimationFrame(onArrowLeft);\n        } else {\n          const { y: rotationY } = camera.rotation;\n          const dx = -Math.cos(rotationY);\n          const dy = -Math.sin(rotationY);\n          moveCamera(dx, dy, onArrowLeft);\n        }\n      }\n    };\n    const onKeyDown = e => {\n      let { key } = e;\n      key = keyMap[key] || key;\n      if (keySet.has(key)) return;\n      keySet.add(key);\n      switch (key) {\n        case 'Control':\n          keySet.add('Control');\n          break;\n        case 'ArrowUp':\n          keySet.delete('ArrowDown');\n          onArrowUp();\n          break;\n        case 'ArrowRight':\n          keySet.delete('ArrowLeft');\n          onArrowRight();\n          break;\n        case 'ArrowDown':\n          keySet.delete('ArrowUp');\n          onArrowDown();\n          break;\n        case 'ArrowLeft':\n          keySet.delete('ArrowRight');\n          onArrowLeft();\n          break;\n        default:\n          break;\n      }\n    };\n    const onKeyUp = e => {\n      let { key } = e;\n      key = keyMap[key] || key;\n      keySet.delete(key);\n    };\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n  };\n  if (IS_MOBILE) {\n    addTouchControls();\n  } else {\n    addMouseControls();\n    addKeyboardControls();\n  }\n};\n// 添加光线追踪，处理点击事件\nconst addRaycaster = ({ scene, camera, renderer }) => {\n  const { domElement } = renderer;\n  const onPointerDown = downEvent => {\n    const { offsetX: downX, offsetY: downY } = downEvent;\n    const startTime = Date.now();\n    const onPointerUp = upEvent => {\n      domElement.removeEventListener('pointerup', onPointerUp);\n      const { offsetX: upX, offsetY: upY } = upEvent;\n      const endTime = Date.now();\n      // 判断是否为拖拽\n      if (\n        Math.abs(downX - upX) > 5 ||\n        Math.abs(downY - upY) > 5 ||\n        endTime - startTime > 1000\n      ) return;\n      const { offsetWidth, offsetHeight } = domElement;\n      const raycaster = new three.Raycaster();\n      const x = (upX / offsetWidth) * 2 - 1;\n      const y = -(upY / offsetHeight) * 2 + 1;\n      const mouse = new three.Vector2(x, y);\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(scene.children, true);\n      const [intersect] = intersects;\n      if (\n        intersect &&\n        intersect.object &&\n        intersect.object.onClick\n      ) {\n        intersect.object.onClick(intersect);\n      }\n    }\n    domElement.addEventListener('pointerup', onPointerUp);\n  }\n  domElement.addEventListener('pointerdown', onPointerDown);\n};\n// 添加 grid 参考和 axis 参考\n// eslint-disable-next-line\nconst drawReferences = ({ scene }) => {\n  const gridWidth = 100;\n  const grid = new three.GridHelper(gridWidth, 10);\n  grid.rotation.x = HALF_PI;\n  scene.add(grid);\n  const axes = new three.AxesHelper(gridWidth / 2);\n  scene.add(axes);\n};\n// 绘制一楼\nconst drawFirstFloor = ({ scene, camera, setLoading, setCurrentExhibit }) => {\n  const drawLights = () => {\n    const lights = [\n      new three.PointLight(0xFFFFFF, 1, 80),\n      new three.PointLight(0xFFFFFF, 1, 80),\n    ];\n    lights[0].position.set(0, 25, 19);\n    lights[1].position.set(0, -25, 19);\n    return lights;\n  };\n  const drawFloor = () => {\n    const geometry = new three.BoxGeometry(100, 100, 1);\n    const material = new three.MeshPhysicalMaterial({ color: 0x333333 });\n    const floor = new three.Mesh(geometry, material);\n    floor.position.z = -0.5;\n    const boundary = turf.polygon([[\n      [-49, -49],\n      [49, -49],\n      [49, 49],\n      [-49, 49],\n      [-49, -49],\n    ]]);\n    floor.onClick = intersect => {\n      // 控制范围，不能离墙过近\n      let { x, y } = intersect.point;\n      if (!turf.booleanPointInPolygon(turf.point([x, y]), boundary)) return;\n      const distance = Math.sqrt(Math.pow(camera.position.x - x, 2) + Math.pow(camera.position.y - y, 2));\n      const duration = distance * 10;\n      new TWEEN.Tween(camera.position)\n        .to({ x, y }, duration)\n        .interpolation(TWEEN.Interpolation.Bezier)\n        .easing(TWEEN.Easing.Linear.None)\n        .start();\n    };\n    return floor;\n  };\n  const drawCeiling = () => {\n    const geometry = new three.BoxGeometry(100, 100, 1);\n    const material = new three.MeshPhysicalMaterial({ color: 0xFFFFFF });\n    const ceiling = new three.Mesh(geometry, material);\n    ceiling.position.z = 20 + 0.5;\n    return ceiling;\n  };\n  // 绘制画框\n  const drawFrame = ({ size }) => {\n    const { width, height } = size;\n    const shape = new three.Shape();\n    const border = 0.4;\n    shape.moveTo(0 - border, 0 - border);\n    shape.lineTo(0 - border, height + border);\n    shape.lineTo(width + border, height + border);\n    shape.lineTo(width + border, 0 - border);\n    const path = new three.Path()\n    path.moveTo(0, 0);\n    path.lineTo(0, height);\n    path.lineTo(width, height);\n    path.lineTo(width, 0);\n    shape.holes.push(path);\n    const extrude = { depth: border, bevelEnabled: true, bevelSegments: 2, steps: 2, bevelSize: 0, bevelThickness: 0 };\n    const geometry = new three.ExtrudeGeometry(shape, extrude);\n    const material = new three.MeshPhysicalMaterial({ color: 0xEEEEEE });\n    const frame = new three.Mesh(geometry, material);\n    frame.position.x = -(width / 2);\n    frame.position.z = -(height / 2);\n    frame.rotation.x = HALF_PI;\n    return frame;\n  };\n  const drawExhibit = ({ url, rotation }) => {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        const { width, height } = image;\n        const ratioX = width / 16;\n        const ratioY = height / 9;\n        const ratio = Math.max(ratioX, ratioY);\n        const w = width / ratio;\n        const h = height / ratio;\n        const texture = new three.TextureLoader().load(url);\n        const geometry = new three.BoxGeometry(w, h, 0.2);\n        const material = [\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ map: texture }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n        ];\n        const exhibit = new three.Mesh(geometry, material);\n        exhibit.position.y = -0.2;\n        exhibit.rotation.x = HALF_PI;\n        exhibit.onClick = intersect => {\n          var box = new three.Box3();\n          box.setFromObject(intersect.object);\n          const { min, max } = box;\n          const center = {\n            x: min.x + ((max.x - min.x) / 2),\n            y: min.y + ((max.y - min.y) / 2),\n            z: min.z + ((max.z - min.z) / 2),\n          };\n          // 根据墙面朝向计算新的相机位置\n          const rotationZ = makeRadian(rotation.z);\n          const newRotation = { y: getRotation(camera.rotation.y, rotationZ) };\n          // 距离小于25米且夹角小于30度，弹出大图\n          if (\n            Math.sqrt(Math.pow(camera.position.x - center.x, 2) + Math.pow(camera.position.y - center.y, 2)) <= 25 &&\n            Math.abs(makeRadian(camera.rotation.y) - rotationZ) < (PI / 6)\n          ) {\n            setCurrentExhibit(url);\n          } else {\n            const newPosition = { x: center.x - (Math.sin(DOUBLE_PI - rotationZ) * 20), y: center.y - (Math.cos(DOUBLE_PI - rotationZ) * 20) };\n            const duration = Math.sqrt(Math.pow(camera.position.x - newPosition.x, 2) + Math.pow(camera.position.y - newPosition.y, 2)) * 10;\n            new TWEEN.Tween(camera)\n              .to({ position: newPosition, rotation: newRotation }, duration)\n              .interpolation(TWEEN.Interpolation.Bezier)\n              .easing(TWEEN.Easing.Linear.None)\n              .start();\n          }\n        }\n        const frame = drawFrame({ size: { width: w, height: h } });\n        const group = new three.Group();\n        group.add(exhibit, frame);\n        resolve(group);\n      };\n      image.onerror = () => reject();\n    })\n  };\n  const drawWall = ({ size, position, rotation, exhibits }) => {\n    const { width, height, depth } = size;\n    const geometry = new three.BoxGeometry(width, height, depth);\n    const material = new three.MeshPhysicalMaterial({ color: 0xDDDDDD });\n    const wall = new three.Mesh(geometry, material);\n    wall.position.y = depth / 2;\n    wall.position.z = height / 2;\n    wall.rotation.x = -HALF_PI;\n    // 墙脚\n    const footer = new three.Mesh(\n      new three.BoxGeometry(width + 0.2, depth + 0.2, 1),\n      new three.MeshPhysicalMaterial({ color: 0x666666 }),\n    );\n    footer.position.y = depth / 2;\n    footer.position.z = 0.5;\n    // create group\n    const group = new three.Group();\n    group.add(wall, footer);\n    Object.assign(group.position, position);\n    Object.assign(group.rotation, rotation);\n    // add exhibits\n    const spacing = width / exhibits.length;\n    const startX = spacing / 2;\n    Promise.all(exhibits.map((url, index) => {\n      return drawExhibit({ url, rotation }).then(res => {\n        res.position.set(-(width / 2) + startX + (spacing * index), 0, 12);\n        group.add(res);\n      });\n    })).finally(() => {\n      setLoading(false);\n    });\n    return group;\n  };\n  const drawWalls = () => {\n    const walls = [\n      // 前\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: 0, y: 50, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        exhibits: [\n          './exhibits/1-1.jpg',\n          './exhibits/1-2.jpg',\n          './exhibits/1-3.jpg',\n          './exhibits/1-4.jpg',\n          './exhibits/1-5.jpg',\n        ],\n      },\n      // 后\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: 0, y: -50, z: 0 },\n        rotation: { x: 0, y: 0, z: PI },\n        exhibits: [\n          './exhibits/2-1.jpg',\n          './exhibits/2-2.jpg',\n          './exhibits/2-3.jpg',\n          './exhibits/2-4.jpg',\n          './exhibits/2-5.jpg',\n        ],\n      },\n      // 左\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: -50, y: 0, z: 0 },\n        rotation: { x: 0, y: 0, z: HALF_PI },\n        exhibits: [\n          './exhibits/3-1.jpg',\n          './exhibits/3-2.jpg',\n          './exhibits/3-3.jpg',\n          './exhibits/3-4.jpg',\n          './exhibits/3-5.jpg',\n        ],\n      },\n      // 右\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: 50, y: 0, z: 0 },\n        rotation: { x: 0, y: 0, z: -HALF_PI },\n        exhibits: [\n          './exhibits/4-1.jpg',\n          './exhibits/4-2.jpg',\n          './exhibits/4-3.jpg',\n          './exhibits/4-4.jpg',\n          './exhibits/4-5.jpg',\n        ],\n      }\n    ].map(drawWall);\n    return walls;\n  };\n  const lights = drawLights();\n  const floor = drawFloor();\n  const ceiling = drawCeiling();\n  const walls = drawWalls();\n  // 设置相机位置\n  camera.position.set(0, -30, 12);\n  camera.rotation.set(HALF_PI, 0, 0)\n  return {\n    geometries: [\n      ...lights,\n      floor,\n      ceiling,\n      ...walls,\n    ],\n    boundaries: [\n      turf.polygon([[\n        [-49, -49],\n        [49, -49],\n        [49, 49],\n        [-49, 49],\n        [-49, -49],\n      ]]),\n    ],\n  };\n};\n// 绘制二楼\nconst drawSecondFloor = ({ scene, camera, setLoading, setCurrentExhibit }) => {\n  const drawLights = () => {\n    const lights = [\n      new three.PointLight(0xFFFFFF, 1, 80),\n      new three.PointLight(0xFFFFFF, 1, 80),\n    ];\n    lights[0].position.set(0, -25, 19);\n    lights[1].position.set(0, 25, 19);\n    return lights;\n  };\n  const drawFloor = () => {\n    const geometry = new three.BoxGeometry(100, 100, 1);\n    const material = new three.MeshPhysicalMaterial({ color: 0x333333 });\n    const floor = new three.Mesh(geometry, material);\n    floor.position.z = -0.5;\n    const boundary = turf.polygon([[\n      [-49, -49],\n      [49, -49],\n      [49, 49],\n      [-49, 49],\n      [-49, -49],\n    ]]);\n    floor.onClick = intersect => {\n      // 控制范围，不能离墙过近\n      let { x, y } = intersect.point;\n      if (!turf.booleanPointInPolygon(turf.point([x, y]), boundary)) return;\n      const distance = Math.sqrt(Math.pow(camera.position.x - x, 2) + Math.pow(camera.position.y - y, 2));\n      const duration = distance * 10;\n      new TWEEN.Tween(camera.position)\n        .to({ x, y }, duration)\n        .interpolation(TWEEN.Interpolation.Bezier)\n        .easing(TWEEN.Easing.Linear.None)\n        .start();\n    };\n    return floor;\n  };\n  const drawCeiling = () => {\n    const geometry = new three.BoxGeometry(100, 100, 1);\n    const material = new three.MeshPhysicalMaterial({ color: 0xFFFFFF });\n    const ceiling = new three.Mesh(geometry, material);\n    ceiling.position.z = 20 + 0.5;\n    return ceiling;\n  };\n  // 绘制画框\n  const drawFrame = ({ size }) => {\n    const { width, height } = size;\n    const shape = new three.Shape();\n    const border = 0.4;\n    shape.moveTo(0 - border, 0 - border);\n    shape.lineTo(0 - border, height + border);\n    shape.lineTo(width + border, height + border);\n    shape.lineTo(width + border, 0 - border);\n    const path = new three.Path()\n    path.moveTo(0, 0);\n    path.lineTo(0, height);\n    path.lineTo(width, height);\n    path.lineTo(width, 0);\n    shape.holes.push(path);\n    const extrude = { depth: border, bevelEnabled: true, bevelSegments: 2, steps: 2, bevelSize: 0, bevelThickness: 0 };\n    const geometry = new three.ExtrudeGeometry(shape, extrude);\n    const material = new three.MeshPhysicalMaterial({ color: 0xEEEEEE });\n    const frame = new three.Mesh(geometry, material);\n    frame.position.x = -(width / 2);\n    frame.position.z = -(height / 2);\n    frame.rotation.x = HALF_PI;\n    return frame;\n  };\n  const drawExhibit = ({ url, rotation }) => {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        const { width, height } = image;\n        const ratioX = width / 16;\n        const ratioY = height / 9;\n        const ratio = Math.max(ratioX, ratioY);\n        const w = width / ratio;\n        const h = height / ratio;\n        const texture = new three.TextureLoader().load(url);\n        const geometry = new three.BoxGeometry(w, h, 0.2);\n        const material = [\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n          new three.MeshPhysicalMaterial({ map: texture }),\n          new three.MeshPhysicalMaterial({ color: 0xFFFFFF }),\n        ];\n        const exhibit = new three.Mesh(geometry, material);\n        exhibit.position.y = -0.2;\n        exhibit.rotation.x = HALF_PI;\n        exhibit.onClick = intersect => {\n          var box = new three.Box3();\n          box.setFromObject(intersect.object);\n          const { min, max } = box;\n          const center = {\n            x: min.x + ((max.x - min.x) / 2),\n            y: min.y + ((max.y - min.y) / 2),\n            z: min.z + ((max.z - min.z) / 2),\n          };\n          // 根据墙面朝向计算新的相机位置\n          const rotationZ = makeRadian(rotation.z);\n          const newRotation = { y: getRotation(camera.rotation.y, rotationZ) };\n          // 距离小于25米且夹角小于30度，弹出大图\n          if (\n            Math.sqrt(Math.pow(camera.position.x - center.x, 2) + Math.pow(camera.position.y - center.y, 2)) <= 25 &&\n            Math.abs(makeRadian(camera.rotation.y) - rotationZ) < (PI / 6)\n          ) {\n            setCurrentExhibit(url);\n          } else {\n            const newPosition = { x: center.x - (Math.sin(DOUBLE_PI - rotationZ) * 20), y: center.y - (Math.cos(DOUBLE_PI - rotationZ) * 20) };\n            const duration = Math.sqrt(Math.pow(camera.position.x - newPosition.x, 2) + Math.pow(camera.position.y - newPosition.y, 2)) * 10;\n            new TWEEN.Tween(camera)\n              .to({ position: newPosition, rotation: newRotation }, duration)\n              .interpolation(TWEEN.Interpolation.Bezier)\n              .easing(TWEEN.Easing.Linear.None)\n              .start();\n          }\n        }\n        const frame = drawFrame({ size: { width: w, height: h } });\n        const group = new three.Group();\n        group.add(exhibit, frame);\n        resolve(group);\n      };\n      image.onerror = () => reject();\n    })\n  };\n  const drawWall = ({ size, position, rotation, exhibits }) => {\n    const { width, height, depth } = size;\n    const geometry = new three.BoxGeometry(width, height, depth);\n    const material = new three.MeshPhysicalMaterial({ color: 0xDDDDDD });\n    const wall = new three.Mesh(geometry, material);\n    wall.position.y = depth / 2;\n    wall.position.z = height / 2;\n    wall.rotation.x = -HALF_PI;\n    // 墙脚\n    const footer = new three.Mesh(\n      new three.BoxGeometry(width + 0.2, depth + 0.2, 1),\n      new three.MeshPhysicalMaterial({ color: 0x666666 }),\n    );\n    footer.position.y = depth / 2;\n    footer.position.z = 0.5;\n    // create group\n    const group = new three.Group();\n    group.add(wall, footer);\n    Object.assign(group.position, position);\n    Object.assign(group.rotation, rotation);\n    // add exhibits\n    const spacing = width / exhibits.length;\n    const startX = spacing / 2;\n    Promise.all(exhibits.map((url, index) => {\n      return drawExhibit({ url, rotation }).then(res => {\n        res.position.set(-(width / 2) + startX + (spacing * index), 0, 12);\n        group.add(res);\n      });\n    })).finally(() => {\n      setLoading(false);\n    });\n    return group;\n  };\n  const drawWalls = () => {\n    const walls = [\n      // 前\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: 0, y: 50, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        exhibits: [\n          './exhibits/1-1.jpg',\n          './exhibits/1-2.jpg',\n          // './exhibits/1-3.jpg',\n          './exhibits/1-4.jpg',\n          './exhibits/1-5.jpg',\n        ],\n      },\n      // 后\n      {\n        size: { width: 100, height: 20, depth: 1 },\n        position: { x: 0, y: -50, z: 0 },\n        rotation: { x: 0, y: 0, z: PI },\n        exhibits: [\n          './exhibits/2-1.jpg',\n          './exhibits/2-2.jpg',\n          // './exhibits/2-3.jpg',\n          './exhibits/2-4.jpg',\n          './exhibits/2-5.jpg',\n        ],\n      },\n      // 左-1\n      {\n        size: { width: 50, height: 20, depth: 1 },\n        position: { x: -50, y: 25, z: 0 },\n        rotation: { x: 0, y: 0, z: HALF_PI },\n        exhibits: [\n          './exhibits/3-1.jpg',\n          // './exhibits/3-2.jpg',\n          // './exhibits/3-3.jpg',\n          // './exhibits/3-4.jpg',\n          // './exhibits/3-5.jpg',\n        ],\n      },\n      // 左-2\n      {\n        size: { width: 50, height: 20, depth: 1 },\n        position: { x: -50, y: -25, z: 0 },\n        rotation: { x: 0, y: 0, z: HALF_PI },\n        exhibits: [\n          // './exhibits/3-1.jpg',\n          // './exhibits/3-2.jpg',\n          // './exhibits/3-3.jpg',\n          // './exhibits/3-4.jpg',\n          './exhibits/3-5.jpg',\n        ],\n      },\n      // 中-左\n      {\n        size: { width: 30, height: 20, depth: 1 },\n        position: { x: -35, y: -0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        exhibits: [\n          './exhibits/3-2.jpg',\n        ],\n      },\n      // 中-左\n      {\n        size: { width: 30, height: 20, depth: 1 },\n        position: { x: -35, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: PI },\n        exhibits: [\n          './exhibits/3-4.jpg',\n        ],\n      },\n      // 右-1\n      {\n        size: { width: 50, height: 20, depth: 1 },\n        position: { x: 50, y: 25, z: 0 },\n        rotation: { x: 0, y: 0, z: -HALF_PI },\n        exhibits: [\n          './exhibits/4-1.jpg',\n          // './exhibits/4-2.jpg',\n          // './exhibits/4-3.jpg',\n          // './exhibits/4-4.jpg',\n          // './exhibits/4-5.jpg',\n        ],\n      },\n      // 右-2\n      {\n        size: { width: 50, height: 20, depth: 1 },\n        position: { x: 50, y: -25, z: 0 },\n        rotation: { x: 0, y: 0, z: -HALF_PI },\n        exhibits: [\n          // './exhibits/4-1.jpg',\n          // './exhibits/4-2.jpg',\n          // './exhibits/4-3.jpg',\n          // './exhibits/4-4.jpg',\n          './exhibits/4-5.jpg',\n        ],\n      },\n      // 中-右\n      {\n        size: { width: 30, height: 20, depth: 1 },\n        position: { x: 35, y: -0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        exhibits: [\n          './exhibits/4-2.jpg',\n        ],\n      },\n      // 中-右\n      {\n        size: { width: 30, height: 20, depth: 1 },\n        position: { x: 35, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: PI },\n        exhibits: [\n          './exhibits/4-4.jpg',\n        ],\n      },\n    ].map(drawWall);\n    return walls;\n  };\n  const lights = drawLights();\n  const floor = drawFloor();\n  const ceiling = drawCeiling();\n  const walls = drawWalls();\n  // 设置相机位置\n  camera.position.set(0, -30, 12);\n  camera.rotation.set(HALF_PI, 0, 0)\n  return {\n    geometries: [\n      ...lights,\n      floor,\n      ceiling,\n      ...walls,\n    ],\n    boundaries: [\n      turf.polygon([[\n        [-49, -49],\n        [49, -49],\n        [49, -2],\n        [19, -2],\n        [19, 2],\n        [49, 2],\n        [49, 49],\n        [-49, 49],\n        [-49, 2],\n        [-19, 2],\n        [-19, -2],\n        [-49, -2],\n        [-49, -49],\n      ]]),\n    ],\n  };\n};\nconst floorMap = {\n  1: drawFirstFloor,\n  2: drawSecondFloor,\n};\n\nconst Exhibition = () => {\n  const containerRef = useRef();\n  const [inited, setInited] = useState(false);\n  const [\n    {\n      scene,\n      camera,\n      renderer\n    },\n    setInstances\n  ] = useReducer((state, newState) => ({\n    ...state,\n    ...newState\n  }), {});\n  const [loading, setLoading] = useState(true);\n  const [currentFloor, setCurrentFloor] = useState(1);\n  // 楼层边界\n  const boundariesRef = useRef([]);\n  // 查看大图\n  const [currentExhibit, setCurrentExhibit] = useState('');\n  /**\n   * 初始化\n   */\n  useEffect(() => {\n    if (inited) return;\n    const container = containerRef.current;\n    const instances = init(container);\n    setInited(true);\n    setInstances(instances);\n    addLights(instances);\n    addControls(instances, boundariesRef);\n    addRaycaster(instances);\n    // drawReferences(instances);\n  }, [inited]);\n  /**\n   * 监听窗口缩放\n   */\n  useEffect(() => {\n    if (!camera || !renderer) return;\n    // resize\n    const onResize = () => {\n      const container = containerRef.current;\n      const { offsetWidth, offsetHeight } = container;\n      camera.aspect = offsetWidth / offsetHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(offsetWidth, offsetHeight);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [camera, renderer]);\n  /**\n   * 绘制楼层\n   */\n  useEffect(() => {\n    if (!scene || !camera || !renderer) return;\n    const renderFloor = floorMap[currentFloor];\n    if (!renderFloor) return;\n    setLoading(true);\n    const {\n      geometries,\n      boundaries,\n    } = renderFloor({\n      scene,\n      camera,\n      renderer,\n      setLoading,\n      setCurrentExhibit\n    });\n    scene.add(...geometries);\n    boundariesRef.current = boundaries;\n    return () => {\n      scene.remove(...geometries);\n      boundariesRef.current = [];\n    };\n  }, [scene, camera, renderer, currentFloor]);\n  /**\n   * 渲染场景\n   */\n  useEffect(() => {\n    if (!scene || !camera || !renderer) return;\n    let interrupt = false;\n    const update = () => {\n      if (interrupt) return;\n      requestAnimationFrame(update);\n      TWEEN.update();\n      renderer.render(scene, camera);\n    };\n    update();\n    return () => interrupt = true;\n  }, [scene, camera, renderer]);\n  useEffect(() => {\n    const handleEscape = e => {\n      const { key } = e;\n      if (key === 'Escape') {\n        setCurrentExhibit('');\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, []);\n  return (\n    <Spin spinning={loading} style={{\n      width: '100vw',\n      height: '100vh',\n    }}>\n      <div\n        ref={containerRef}\n        style={{\n          width: '100vw',\n          height: '100vh',\n          touchAction: 'none',\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          padding: 20,\n        }}\n      >\n        <Button.Group>\n          <Button\n            type={currentFloor === 1 ? 'primary' : ''}\n            onClick={() => setCurrentFloor(1)}\n          >\n            一楼\n          </Button>\n          <Button\n            type={currentFloor === 2 ? 'primary' : ''}\n            onClick={() => setCurrentFloor(2)}\n          >\n            二楼\n          </Button>\n        </Button.Group>\n      </div>\n      {currentExhibit ? (\n        <div\n          style={{\n            display: currentExhibit ? '' : 'none',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100vw',\n            height: '100vh',\n            textAlign: 'center',\n            background: '#000',\n            userSelect: 'none',\n          }}\n          onClick={() => setCurrentExhibit('')}\n        >\n          <img\n            alt=\"\"\n            src={currentExhibit}\n            style={{\n              maxWidth: '100%',\n              maxHeight: '100%',\n            }}\n          />\n        </div>\n      ) : null}\n    </Spin>\n  )\n}\n\nexport default Exhibition;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport Exhibition from './pages/exhibition';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Exhibition />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}